"use strict";(self.webpackChunkjava_lessons=self.webpackChunkjava_lessons||[]).push([[9716],{9035:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>u,toc:()=>p});var r=t(5893),a=t(1151),i=t(5162),s=t(4866);const o={id:20,slug:"/exercise/20-game-example",title:"\u041f\u0440\u0438\u043c\u0435\u0440\u043d\u0430 \u0438\u0433\u0440\u0430 \u0441 \u0432\u0438\u043a\u0442\u043e\u0440\u0438\u043d\u0430",description:"\u041f\u0440\u0438\u043c\u0435\u0440\u043d\u0430 \u0438\u0433\u0440\u0430 \u0441 \u0432\u0438\u043a\u0442\u043e\u0440\u0438\u043d\u0430, \u043a\u043e\u044f\u0442\u043e \u0434\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0438\u0440\u0430 \u0438\u0437\u043f\u043e\u043b\u0437\u0432\u0430\u043d\u0435\u0442\u043e \u043d\u0430 \u0443\u0441\u043b\u043e\u0432\u043d\u0438 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0438, \u0446\u0438\u043a\u043b\u0438 \u0438 \u043c\u0430\u0441\u0438\u0432\u0438, \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u0438 \u0444\u0430\u0439\u043b\u043e\u0432\u0435",sidebar_label:"\u0418\u0433\u0440\u0430 \u0432\u0438\u043a\u0442\u043e\u0440\u0438\u043d\u0430",sidebar_class_name:"game newItem",hide_title:!1,hide_table_of_contents:!1,draft:!1,unlisted:!1,keywords:["Java","\u0420\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u0438 \u0418\u0437\u0440\u0430\u0437\u0438","\u0424\u0430\u0439\u043b\u043e\u0432\u0435","\u041e\u041e\u041f"],image:"/images/exercises.jpg",tags:["\u0443\u043f\u0440\u0430\u0436\u043d\u0435\u043d\u0438\u044f","\u0438\u0433\u0440\u0430"]},l=void 0,u={id:"exams/20",title:"\u041f\u0440\u0438\u043c\u0435\u0440\u043d\u0430 \u0438\u0433\u0440\u0430 \u0441 \u0432\u0438\u043a\u0442\u043e\u0440\u0438\u043d\u0430",description:"\u041f\u0440\u0438\u043c\u0435\u0440\u043d\u0430 \u0438\u0433\u0440\u0430 \u0441 \u0432\u0438\u043a\u0442\u043e\u0440\u0438\u043d\u0430, \u043a\u043e\u044f\u0442\u043e \u0434\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0438\u0440\u0430 \u0438\u0437\u043f\u043e\u043b\u0437\u0432\u0430\u043d\u0435\u0442\u043e \u043d\u0430 \u0443\u0441\u043b\u043e\u0432\u043d\u0438 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0438, \u0446\u0438\u043a\u043b\u0438 \u0438 \u043c\u0430\u0441\u0438\u0432\u0438, \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u0438 \u0444\u0430\u0439\u043b\u043e\u0432\u0435",source:"@site/docs/exams/20-game-example.mdx",sourceDirName:"exams",slug:"/exercise/20-game-example",permalink:"/exercise/20-game-example",draft:!1,unlisted:!1,tags:[{label:"\u0443\u043f\u0440\u0430\u0436\u043d\u0435\u043d\u0438\u044f",permalink:"/tags/\u0443\u043f\u0440\u0430\u0436\u043d\u0435\u043d\u0438\u044f"},{label:"\u0438\u0433\u0440\u0430",permalink:"/tags/\u0438\u0433\u0440\u0430"}],version:"current",sidebarPosition:20,frontMatter:{id:"20",slug:"/exercise/20-game-example",title:"\u041f\u0440\u0438\u043c\u0435\u0440\u043d\u0430 \u0438\u0433\u0440\u0430 \u0441 \u0432\u0438\u043a\u0442\u043e\u0440\u0438\u043d\u0430",description:"\u041f\u0440\u0438\u043c\u0435\u0440\u043d\u0430 \u0438\u0433\u0440\u0430 \u0441 \u0432\u0438\u043a\u0442\u043e\u0440\u0438\u043d\u0430, \u043a\u043e\u044f\u0442\u043e \u0434\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0438\u0440\u0430 \u0438\u0437\u043f\u043e\u043b\u0437\u0432\u0430\u043d\u0435\u0442\u043e \u043d\u0430 \u0443\u0441\u043b\u043e\u0432\u043d\u0438 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0438, \u0446\u0438\u043a\u043b\u0438 \u0438 \u043c\u0430\u0441\u0438\u0432\u0438, \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u0438 \u0444\u0430\u0439\u043b\u043e\u0432\u0435",sidebar_label:"\u0418\u0433\u0440\u0430 \u0432\u0438\u043a\u0442\u043e\u0440\u0438\u043d\u0430",sidebar_class_name:"game newItem",hide_title:!1,hide_table_of_contents:!1,draft:!1,unlisted:!1,keywords:["Java","\u0420\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u0438 \u0418\u0437\u0440\u0430\u0437\u0438","\u0424\u0430\u0439\u043b\u043e\u0432\u0435","\u041e\u041e\u041f"],image:"/images/exercises.jpg",tags:["\u0443\u043f\u0440\u0430\u0436\u043d\u0435\u043d\u0438\u044f","\u0438\u0433\u0440\u0430"]},sidebar:"tutorialSidebar",previous:{title:"\u0425\u0435\u0448/\u041b\u0438\u0441\u0442\u043e\u0432\u0435",permalink:"/exercise/12-hash-and-lists"},next:{title:"\u0411\u0430\u043d\u043a\u043e\u043c\u0430\u0442",permalink:"/exercise/21-atm-console"}},c={},p=[{value:"\u0418\u0433\u0440\u0430\u0442\u0430 \u043f\u043e\u0434\u0434\u044a\u0440\u0436\u0430 \u0437\u0430\u043f\u0430\u043c\u0435\u0442\u044f\u0432\u0430\u043d\u0435 \u043d\u0430 \u0433\u0435\u0440\u043e\u044f \u0432\u0438 \u0432\u044a\u0432 \u0444\u0430\u0439\u043b, \u0437\u0430 \u0434\u0430 \u043c\u043e\u0436\u0435\u0442\u0435 \u0434\u0430 \u043f\u0440\u043e\u0434\u044a\u043b\u0436\u0438\u0442\u0435 \u0438\u0433\u0440\u0430\u0442\u0430 \u043f\u043e-\u043a\u044a\u0441\u043d\u043e.",id:"\u0438\u0433\u0440\u0430\u0442\u0430-\u043f\u043e\u0434\u0434\u044a\u0440\u0436\u0430-\u0437\u0430\u043f\u0430\u043c\u0435\u0442\u044f\u0432\u0430\u043d\u0435-\u043d\u0430-\u0433\u0435\u0440\u043e\u044f-\u0432\u0438-\u0432\u044a\u0432-\u0444\u0430\u0439\u043b-\u0437\u0430-\u0434\u0430-\u043c\u043e\u0436\u0435\u0442\u0435-\u0434\u0430-\u043f\u0440\u043e\u0434\u044a\u043b\u0436\u0438\u0442\u0435-\u0438\u0433\u0440\u0430\u0442\u0430-\u043f\u043e-\u043a\u044a\u0441\u043d\u043e",level:4}];function m(e){const n={admonition:"admonition",code:"code",h4:"h4",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.admonition,{title:"\u0418\u0433\u0440\u0430\u0442\u0430 \u0435 \u0432\u0441\u0435 \u043e\u0449\u0435 \u0432 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430",type:"warning",children:(0,r.jsx)(n.p,{children:"\u0422\u043e\u0432\u0430 \u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u0430 \u0438\u0433\u0440\u0430 \u0441 \u0432\u0438\u043a\u0442\u043e\u0440\u0438\u043d\u0430, \u043a\u043e\u044f\u0442\u043e \u0434\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0438\u0440\u0430 \u0438\u0437\u043f\u043e\u043b\u0437\u0432\u0430\u043d\u0435\u0442\u043e \u043d\u0430 \u0443\u0441\u043b\u043e\u0432\u043d\u0438 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0438, \u0446\u0438\u043a\u043b\u0438 \u0438 \u043c\u0430\u0441\u0438\u0432\u0438, \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u0438 \u0444\u0430\u0439\u043b\u043e\u0432\u0435"})}),"\n",(0,r.jsx)(n.p,{children:"\u0420\u0430\u0437\u0432\u0438\u0439\u0442\u0435 \u0433\u0435\u0440\u043e\u044f \u0441\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u0442\u0430 \u043d\u0430 \u0432\u0438\u043a\u0442\u043e\u0440\u0438\u043d\u0430, \u043e\u0442 \u043a\u043e\u044f\u0442\u043e \u043f\u0435\u0447\u0435\u043b\u0438\u0442\u0435 \u0442\u043e\u0447\u043a\u0438 \u0437\u0430 \u043f\u043e\u0434\u043e\u0431\u0440\u0435\u043d\u0438\u044f. \u0418\u0437\u043f\u043e\u043b\u0437\u0432\u0430\u0439\u0442\u0435 \u0442\u043e\u0447\u043a\u0438\u0442\u0435 \u0437\u0430 \u043f\u043e\u0434\u043e\u0431\u0440\u0435\u043d\u0438\u044f, \u0437\u0430 \u0434\u0430 \u043f\u043e\u0434\u043e\u0431\u0440\u0438\u0442\u0435 \u0433\u0435\u0440\u043e\u044f \u0441\u0438. \u041f\u0440\u0438\u043a\u043b\u044e\u0447\u0435\u0442\u0435 \u0438\u0433\u0440\u0430\u0442\u0430, \u043a\u0430\u0442\u043e \u043e\u0442\u0433\u043e\u0432\u043e\u0440\u0438\u0442\u0435 \u043d\u0430 \u0432\u0441\u0438\u0447\u043a\u0438 \u0432\u044a\u043f\u0440\u043e\u0441\u0438 \u0438\u043b\u0438 \u043a\u0430\u0442\u043e \u0438\u0437\u043f\u043e\u043b\u0437\u0432\u0430\u0442\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u0430\u0442\u0430 \u0437\u0430 \u0438\u0437\u0445\u043e\u0434.\n\u041c\u043e\u0436\u0435\u0442\u0435 \u0434\u0430 \u0441\u0435 \u0438\u0437\u043f\u0440\u0430\u0432\u0438\u0442\u0435 \u0441\u0440\u0435\u0449\u0443 \u0434\u0440\u0443\u0433 \u0433\u0435\u0440\u043e\u0439 \u0432 \u0431\u0438\u0442\u043a\u0430."}),"\n",(0,r.jsx)(n.h4,{id:"\u0438\u0433\u0440\u0430\u0442\u0430-\u043f\u043e\u0434\u0434\u044a\u0440\u0436\u0430-\u0437\u0430\u043f\u0430\u043c\u0435\u0442\u044f\u0432\u0430\u043d\u0435-\u043d\u0430-\u0433\u0435\u0440\u043e\u044f-\u0432\u0438-\u0432\u044a\u0432-\u0444\u0430\u0439\u043b-\u0437\u0430-\u0434\u0430-\u043c\u043e\u0436\u0435\u0442\u0435-\u0434\u0430-\u043f\u0440\u043e\u0434\u044a\u043b\u0436\u0438\u0442\u0435-\u0438\u0433\u0440\u0430\u0442\u0430-\u043f\u043e-\u043a\u044a\u0441\u043d\u043e",children:"\u0418\u0433\u0440\u0430\u0442\u0430 \u043f\u043e\u0434\u0434\u044a\u0440\u0436\u0430 \u0437\u0430\u043f\u0430\u043c\u0435\u0442\u044f\u0432\u0430\u043d\u0435 \u043d\u0430 \u0433\u0435\u0440\u043e\u044f \u0432\u0438 \u0432\u044a\u0432 \u0444\u0430\u0439\u043b, \u0437\u0430 \u0434\u0430 \u043c\u043e\u0436\u0435\u0442\u0435 \u0434\u0430 \u043f\u0440\u043e\u0434\u044a\u043b\u0436\u0438\u0442\u0435 \u0438\u0433\u0440\u0430\u0442\u0430 \u043f\u043e-\u043a\u044a\u0441\u043d\u043e."}),"\n",(0,r.jsxs)(s.Z,{defaultValue:"main",values:[{label:"Main.java",value:"main"},{label:"BattleGame.java",value:"battleGame"},{label:"GameServer.java",value:"gameServer"},{label:"Hero.java",value:"hero"},{label:"IGame.java",value:"igame"},{label:"Question.java",value:"question"},{label:"TriviaGame.java",value:"triviaGame"}],children:[(0,r.jsx)(i.Z,{value:"main",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        System.out.println("\u0414\u043e\u0431\u0440\u0435 \u0434\u043e\u0448\u043b\u0438 \u0432 \u0438\u0433\u0440\u0430\u0442\u0430!");\n        System.out.print("\u0412\u044a\u0432\u0435\u0434\u0435\u0442\u0435 \u0438\u043c\u0435 \u043d\u0430 \u0433\u0435\u0440\u043e\u0439:");\n        Scanner scanner = new Scanner(System.in);\n        String heroName = scanner.next();\n        Hero hero = new Hero(heroName);\n        GameServer gameServer = new GameServer(hero);\n        gameServer.start();\n    }\n}\n'})})}),(0,r.jsx)(i.Z,{value:"battleGame",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'class BattleGame implements IGame {\n    private Hero hero;\n    private final GameServer gameServer;\n\n    public BattleGame(Hero hero, GameServer gameServer) {\n        this.hero = hero;\n        this.gameServer = gameServer;\n    }\n\n    public void fight(Hero hero2) {\n        while (hero.isAlive() && hero2.isAlive()) {\n            hero.attack(hero2);\n            if (hero2.isAlive()) {\n                hero2.attack(hero);\n            }\n        }\n\n        Hero winner = hero.isAlive() ? hero : hero2;\n        if (winner == hero) {\n            gameServer.save();\n        }\n        System.out.println("\u041f\u043e\u0431\u0435\u0434\u0438\u0442\u0435\u043b\u044f\u0442 \u0435 " + winner.name);\n    }\n\n    @Override\n    public void start() {\n        System.out.println("\u0417\u0430\u043f\u043e\u0447\u0432\u0430 \u0431\u0438\u0442\u043a\u0430");\n\n    }\n\n    @Override\n    public Hero getHero() {\n        return hero;\n    }\n}\n'})})}),(0,r.jsx)(i.Z,{value:"gameServer",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'import java.io.File;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class GameServer {\n    Hero hero;\n    private File saveFile = new File("save.txt");\n\n    public GameServer(Hero hero1) {\n        loadHero(hero1);\n        this.start();\n    }\n\n    public void start() {\n        System.out.print("\\033[H\\033[2J");\n        Scanner scanner = new Scanner(System.in);\n        System.out.println("\u0418\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u0438\u0433\u0440\u0430:");\n        System.out.println("1. \u0411\u0438\u0442\u043a\u0430");\n        System.out.println("2. \u0412\u0438\u043a\u0442\u043e\u0440\u0438\u043d\u0430");\n        System.out.println("\\n\\n0. \u0418\u0437\u0445\u043e\u0434");\n        int gameChoice = scanner.nextInt();\n        IGame game;\n        if (gameChoice == 1) {\n            game = new BattleGame(hero, this);\n        } else if (gameChoice == 2) {\n            game = new TriviaGame(hero, this);\n        } else if (gameChoice == 0) {\n            return;\n        } else {\n            System.out.println("\u041d\u0435\u0432\u0430\u043b\u0438\u0434\u0435\u043d \u0438\u0437\u0431\u043e\u0440!");\n            start();\n            return;\n        }\n        play(game);\n        save();\n    }\n\n    public void play(IGame game) {\n        game.start();\n        if (game instanceof BattleGame)\n        {\n            ((BattleGame) game).fight(hero);\n        }\n        hero = game.getHero();\n    }\n\n    private void checkForSaveFile() {\n        if (!saveFile.exists()) {\n            try {\n                saveFile.createNewFile();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n    private void loadHero(Hero hero1)\n    {\n        try {\n            checkForSaveFile();\n            Scanner fileScanner = new Scanner(saveFile);\n            String heroLine;\n            do {\n                heroLine = fileScanner.nextLine();\n                String heroName = heroLine.split(",")[0];\n                if (heroName.equals(hero1.name)) {\n                    hero1.deserialize(heroLine);\n                    System.out.println("\u0417\u0430\u0440\u0435\u0434\u0435\u043d \u0433\u0435\u0440\u043e\u0439 " + hero1.name);\n                    break;\n                }\n            } while (fileScanner.hasNextLine());\n            hero = hero1;\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n\n    public void save() {\n        try {\n            Scanner fileScanner = new Scanner(saveFile);\n            String heroLine;\n            int heroExists = -1;\n            int lineIndex = 0;\n            do {\n                heroLine = fileScanner.nextLine();\n                String heroName = heroLine.split(",")[0];\n                if (heroName.equals(hero.name)) {\n                    heroExists = lineIndex;\n                }\n                lineIndex++;\n            } while (fileScanner.hasNextLine());\n            fileScanner.close();\n\n            if (heroExists != -1) {\n                List<String> fileContent = new ArrayList<>(java.nio.file.Files.readAllLines(saveFile.toPath()));\n                fileContent.set(heroExists, hero.serialize());\n                java.nio.file.Files.write(saveFile.toPath(), fileContent);\n            } else {\n                FileWriter writer = new FileWriter(saveFile, true);\n                writer.write(hero.serialize() + "\\n");\n                writer.close();\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public Hero getHero() {\n        return hero;\n    }\n}\n'})})}),(0,r.jsx)(i.Z,{value:"hero",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'import java.util.Scanner;\n\nfinal class Hero {\n    String name;\n    int strength;\n    int dexterity;\n    int vitality;\n    int energy;\n    int health;\n    int damage;\n    int points; // \u0422\u043e\u0447\u043a\u0438 \u0437\u0430 \u043f\u043e\u0434\u043e\u0431\u0440\u0435\u043d\u0438\u044f\n    int defaultDamage;\n    int defaultHealth;\n\n    public Hero(String heroName) {\n        name = heroName;\n        strength = 5;\n        dexterity = 5;\n        vitality = 5;\n        energy = 5;\n        points = 0;\n        defaultHealth = 100;\n        defaultDamage = 10;\n        updateStats();\n    }\n\n    public void attack(Hero enemy) {\n        if (!enemy.tryBlockAttack()) {\n            enemy.takeDamage(damage);\n            System.out.println(name + " \u043d\u0430\u043d\u0435\u0441\u0435 " + damage + " \u0449\u0435\u0442\u0438 \u043d\u0430 " + enemy.name);\n        } else {\n            System.out.println(enemy.name + " \u0431\u043b\u043e\u043a\u0438\u0440\u0430 \u0430\u0442\u0430\u043a\u0430\u0442\u0430 \u043d\u0430 " + name);\n        }\n    }\n\n    public boolean tryBlockAttack() {\n        double blockChance = dexterity * 0.002;\n        return Math.random() < blockChance;\n    }\n\n    public void takeDamage(int damage) {\n        health -= damage;\n        if (health < 0) health = 0;\n    }\n\n    public void updateStats() {\n        damage = this.defaultDamage + strength * 2;\n        health = this.defaultHealth + vitality * 10;\n    }\n\n    public boolean isAlive() {\n        return health > 0;\n    }\n\n    public void printStats() {\n        System.out.println("\u0413\u0435\u0440\u043e\u0439: " + name);\n        System.out.println("\u0421\u0438\u043b\u0430: " + strength);\n        System.out.println("\u041b\u043e\u0432\u043a\u043e\u0441\u0442: " + dexterity);\n        System.out.println("\u0416\u0438\u0432\u043e\u0442: " + vitality);\n        System.out.println("\u0415\u043d\u0435\u0440\u0433\u0438\u044f: " + energy);\n        System.out.println("\u0422\u043e\u0447\u043a\u0438 \u0437\u0430 \u043f\u043e\u0434\u043e\u0431\u0440\u0435\u043d\u0438\u044f: " + points);\n        System.out.println("\u0417\u0434\u0440\u0430\u0432\u0435: " + health);\n    }\n\n    public String serialize() {\n        return name + "," + strength + "," + dexterity + "," + vitality + "," + energy + "," + points + "," + defaultDamage + "," + defaultHealth;\n    }\n\n    public void deserialize(String serializedHero) {\n        String[] heroAttributes = serializedHero.split(",");\n        name = heroAttributes[0];\n        strength = Integer.parseInt(heroAttributes[1]);\n        dexterity = Integer.parseInt(heroAttributes[2]);\n        vitality = Integer.parseInt(heroAttributes[3]);\n        energy = Integer.parseInt(heroAttributes[4]);\n        points = Integer.parseInt(heroAttributes[5]);\n        defaultDamage = Integer.parseInt(heroAttributes[6]);\n        defaultHealth = Integer.parseInt(heroAttributes[7]);\n        updateStats();\n    }\n\n    public void improveAttribute(String attribute) {\n        if (points <= 0) {\n            System.out.println("\u041d\u044f\u043c\u0430\u0442\u0435 \u0434\u043e\u0441\u0442\u0430\u0442\u044a\u0447\u043d\u043e \u0442\u043e\u0447\u043a\u0438.");\n            return;\n        }\n\n        switch (attribute) {\n            case "strength":\n                strength++;\n                break;\n            case "dexterity":\n                dexterity++;\n                break;\n            case "vitality":\n                vitality++;\n                break;\n            case "energy":\n                energy++;\n                break;\n        }\n        updateStats();\n        points--;\n    }\n}\n'})})}),(0,r.jsx)(i.Z,{value:"igame",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"public interface IGame {\n    void start();\n    Hero getHero();\n}\n"})})}),(0,r.jsx)(i.Z,{value:"question",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'import java.util.ArrayList;\nimport java.util.Comparator;\nimport java.util.HashMap;\n\nclass Question {\n    private String question;\n    private String answer;\n    private String[] otherAnswers;\n    private HashMap<String, String> answersWithNumbers = new HashMap<>();\n\n    public Question(String question, String answer, String... otherAnswers) {\n        this.question = question;\n        this.answer = answer;\n        this.otherAnswers = otherAnswers;\n    }\n\n    public String getQuestion() {\n        return question;\n    }\n\n    public String getAnswers() {\n        ArrayList<String> answers = new ArrayList<>();\n        for (String answer : otherAnswers) {\n            answers.add(answer);\n        }\n        answers.add(answer);\n        answers.sort(Comparator.comparingDouble(a -> Math.random()));\n\n        for (int i = 0; i < answers.size(); i++) {\n            answersWithNumbers.put(String.valueOf(i + 1), answers.get(i));\n        }\n\n        answers = new ArrayList<>();\n        for (String key : answersWithNumbers.keySet()) {\n            answers.add("\\t" + key + ") " + answersWithNumbers.get(key));\n        }\n\n        return String.join("\\n", answers);\n    }\n\n    public boolean isCorrect(int response) {\n\n        return answersWithNumbers.get(String.valueOf(response)).equals(answer);\n    }\n}\n'})})}),(0,r.jsx)(i.Z,{value:"triviaGame",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'import org.json.JSONArray;\nimport org.json.JSONException;\nimport org.json.JSONObject;\n\nimport java.net.URI;\nimport java.net.http.HttpClient;\nimport java.net.http.HttpRequest;\nimport java.net.http.HttpResponse;\nimport java.net.http.HttpResponse.BodyHandlers;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\nclass TriviaGame implements IGame {\n    private List<Question> questions;\n    private Hero hero;\n    private Scanner scanner;\n    private final GameServer gameServer;\n    private static final String TRIVIA_URL = "https://opentdb.com/api.php?amount=10&type=multiple&category=18&difficulty=easy";\n\n    public TriviaGame(Hero hero, GameServer gameServer) {\n        this.hero = hero;\n        this.gameServer = gameServer;\n        scanner = new Scanner(System.in);\n        loadQuestions();\n    }\n\n    private void loadQuestions() {\n        HttpClient client = HttpClient.newHttpClient();\n        HttpRequest request = HttpRequest.newBuilder()\n                .uri(URI.create(TRIVIA_URL))\n                .build();\n        try {\n            HttpResponse<String> response = client.send(request, BodyHandlers.ofString());\n            parseTriviaResponse(response.body());\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    private void parseTriviaResponse(String responseString) throws JSONException {\n        JSONObject response = new JSONObject(responseString);\n        JSONArray questionsArray = response.getJSONArray("results");\n        questions = new ArrayList<>();\n\n        for (int i = 0; i < questionsArray.length(); i++) {\n            JSONObject questionObject = questionsArray.getJSONObject(i);\n            String questionText = questionObject.getString("question");\n            String correctAnswer = questionObject.getString("correct_answer");\n            JSONArray incorrectAnswers = questionObject.getJSONArray("incorrect_answers");\n\n            questions.add(new Question(questionText, correctAnswer, incorrectAnswers.getString(0), incorrectAnswers.getString(1), incorrectAnswers.getString(2)));\n        }\n    }\n\n    public void start() {\n        int questionNumber = 1;\n        for (Question question : questions) {\n            System.out.println("\u0412\u044a\u043f\u0440\u043e\u0441 " + questionNumber++ + ":");\n            System.out.println("\u0417\u0430 \u0434\u0430 \u043e\u0442\u0433\u043e\u0432\u043e\u0440\u0438\u0442\u0435, \u0432\u044a\u0432\u0435\u0434\u0435\u0442\u0435 \u043d\u043e\u043c\u0435\u0440\u0430 \u043d\u0430 \u043e\u0442\u0433\u043e\u0432\u043e\u0440\u0430");\n            System.out.println(question.getQuestion());\n            System.out.println(question.getAnswers());\n            System.out.println();\n            System.out.println("\\t9) \u0417\u0430 \u0434\u0430 \u043f\u043e\u0434\u043e\u0431\u0440\u0438\u0442\u0435 \u0433\u0435\u0440\u043e\u044f \u0441\u0438");\n            System.out.println("\\t0) \u0417\u0430 \u0434\u0430 \u0441\u043f\u0440\u0435\u0442\u0435 \u0438\u0433\u0440\u0430\u0442\u0430");\n            int answer = scanner.nextInt();\n            if (answer == 0) {\n                System.out.println("\u0418\u0433\u0440\u0430\u0442\u0430 \u043f\u0440\u0438\u043a\u043b\u044e\u0447\u0438.");\n                gameServer.save();\n                break;\n            }\n            if (answer == 9) {\n                System.out.println("\u0418\u0437\u043f\u043e\u043b\u0437\u0432\u0430\u0439\u0442\u0435 \u0442\u043e\u0447\u043a\u0438\u0442\u0435 \u0437\u0430 \u043f\u043e\u0434\u043e\u0431\u0440\u0435\u043d\u0438\u044f.");\n                System.out.println("\u0422\u043e\u0447\u043a\u0438: " + hero.points);\n                for(int i = 0; i < hero.points; i++)\n                {\n                    System.out.println("\u0418\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u0430\u0442\u0440\u0438\u0431\u0443\u0442 \u0437\u0430 \u043f\u043e\u0434\u043e\u0431\u0440\u0435\u043d\u0438\u0435: strength, dexterity, vitality, energy");\n                    String attribute = scanner.next();\n                    while (!attribute.equals("strength") && !attribute.equals("dexterity") && !attribute.equals("vitality") && !attribute.equals("energy") && !attribute.equals("exit")) {\n                        System.out.println("\u041d\u0435\u0432\u0430\u043b\u0438\u0434\u0435\u043d \u0430\u0442\u0440\u0438\u0431\u0443\u0442. \u041e\u043f\u0438\u0442\u0430\u0439\u0442\u0435 \u043e\u0442\u043d\u043e\u0432\u043e.");\n                        attribute = scanner.next();\n                    }\n                    if (attribute.equals("exit")) {\n                        break;\n                    }\n                    hero.improveAttribute(attribute);\n                    hero.printStats();\n                }\n                continue;\n            }\n            if (question.isCorrect(answer)) {\n                hero.points++;\n                System.out.println("\u041f\u0440\u0430\u0432\u0438\u043b\u043d\u043e! \u0422\u043e\u0447\u043a\u0438: " + hero.points);\n            } else {\n                System.out.println("\u0413\u0440\u0435\u0448\u043a\u0430!");\n            }\n        }\n\n        hero.improveAttribute("strength");\n    }\n\n    @Override\n    public Hero getHero() {\n        return hero;\n    }\n}\n'})})})]})]})}function h(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},5162:(e,n,t)=>{t.d(n,{Z:()=>s});t(7294);var r=t(6010);const a={tabItem:"tabItem_Ymn6"};var i=t(5893);function s(e){let{children:n,hidden:t,className:s}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.Z)(a.tabItem,s),hidden:t,children:n})}},4866:(e,n,t)=>{t.d(n,{Z:()=>x});var r=t(7294),a=t(6010),i=t(2466),s=t(6550),o=t(469),l=t(1980),u=t(7392),c=t(12);function p(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return p(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:a}}=e;return{value:n,label:t,attributes:r,default:a}}))}(t);return function(e){const n=(0,u.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function d(e){let{queryString:n=!1,groupId:t}=e;const a=(0,s.k6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l._X)(i),(0,r.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(a.location.search);n.set(i,e),a.replace({...a.location,search:n.toString()})}),[i,a])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,i=m(e),[s,l]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:i}))),[u,p]=d({queryString:t,groupId:a}),[g,v]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,i]=(0,c.Nk)(t);return[a,(0,r.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:a}),b=(()=>{const e=u??g;return h({value:e,tabValues:i})?e:null})();(0,o.Z)((()=>{b&&l(b)}),[b]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),p(e),v(e)}),[p,v,i]),tabValues:i}}var v=t(2389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var S=t(5893);function y(e){let{className:n,block:t,selectedValue:r,selectValue:s,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:u}=(0,i.o5)(),c=e=>{const n=e.currentTarget,t=l.indexOf(n),a=o[t].value;a!==r&&(u(n),s(a))},p=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,S.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:i}=e;return(0,S.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>l.push(e),onKeyDown:p,onClick:c,...i,className:(0,a.Z)("tabs__item",b.tabItem,i?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function f(e){let{lazy:n,children:t,selectedValue:a}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,S.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function w(e){const n=g(e);return(0,S.jsxs)("div",{className:(0,a.Z)("tabs-container",b.tabList),children:[(0,S.jsx)(y,{...e,...n}),(0,S.jsx)(f,{...e,...n})]})}function x(e){const n=(0,v.Z)();return(0,S.jsx)(w,{...e,children:p(e.children)},String(n))}},1151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>s});var r=t(7294);const a={},i=r.createContext(a);function s(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);